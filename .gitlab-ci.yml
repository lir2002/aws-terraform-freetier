# This file is a template, and might need editing before it works on your project.
# Official image for Hashicorp's Terraform. It uses light image which is Alpine
# based as it is much lighter.
#
# Entrypoint is also needed as image by default set `terraform` binary as an
# entrypoint.
image:
  name: registry.gitlab.com/gitlab-org/gitlab-build-images:terraform
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

# Default output file for Terraform plan
variables:
  PLAN: plan.tfplan
  JSON_PLAN_FILE: tfplan.json

cache:
  paths:
    - .terraform

before_script:
  - alias convert_report="jq -r '([.resource_changes[]?.change.actions?]|flatten)|{\"create\":(map(select(.==\"create\"))|length),\"update\":(map(select(.==\"update\"))|length),\"delete\":(map(select(.==\"delete\"))|length)}'"
  - terraform --version
  - terraform init

stages:
  - validate
  - build
  - test
  - deploy

validate:
  stage: validate
  script:
    - terraform validate

plan:
  stage: build
  script:
    - terraform plan -out=$PLAN
    - terraform show --json $PLAN | convert_report > $JSON_PLAN_FILE
  artifacts:
    paths:
      - $PLAN
    reports:
      terraform: $JSON_PLAN_FILE

# Separate apply job for manual launching Terraform as it can be destructive
# action.
apply:
  stage: deploy
  environment:
    name: production
  script:
    - terraform apply -input=false -auto-approve $DESTROY $PLAN
    - git config user.email "$GITLAB_USER_EMAIL"
    - git config user.name "$GITLAB_USER_NAME"
    - git checkout $CI_COMMIT_BRANCH
    - git config -l
    - git diff -b
    - git commit terraform.tfstate -m "Update terraform.tfstate after terraform apply in job $CI_JOB_ID triggered by $GITLAB_USER_NAME" || true
    - git push https://WRITE_GIT_TOKEN:${WRITE_GIT_TOKEN}@git.epam.com/ethan_li/aws-terraform-freetier.git $CI_COMMIT_BRANCH
  dependencies:
    - plan
  when: manual
  only:
    variables:
      - $GITLAB_USER_NAME != "WRITE_GIT_TOKEN"
  artifacts:
    name: Terraform-State
    paths:
      - terraform.tfstate
